version: '3.7'
services:
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    environment:
      node.name: es0{{.Task.Slot}}
      discovery.type: ''
      discovery.seed_hosts: tasks.es01
      cluster.initial_master_nodes: es01,es02,es03
      node.max_local_storage_nodes: '3'
      network.publish_host: _eth0_
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - '9200'
      - '9300'
    networks:
      - datastream_network
    deploy:
      mode: replicated
      replicas: 3
      restart_policy:
        delay: 30s
        max_attempts: 10
        window: 120s
  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.2
    ports:
      - "5601:5601"
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: '["http://es01:9200"]'
    networks:
      - datastream_network
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 4000
      ZOOKEEPER_SYNC_LIMIT: 2
    networks:
      - datastream_network
    deploy:
      restart_policy:
        delay: 30s
        max_attempts: 10
        window: 120s
  kafka:
    image: jqrdan/datastream-kafka:1.0.0
    ports:
      - target: 9094
        published: 9094
        protocol: tcp
        mode: host
      - target: 8778
        published: 8778
        protocol: tcp
        mode: host
    environment:
      HOSTNAME_COMMAND: "docker info | grep ^Name: | cut -d' ' -f 2"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock  
    networks:
      - datastream_network
    deploy:
      mode: global
      restart_policy:
        delay: 30s
        max_attempts: 10
        window: 120s
  kafkarest:
    image:  confluentinc/cp-kafka-rest:5.4.0
    ports: 
      - "8082:8082"
    environment:
      KAFKA_REST_BOOTSTRAP_SERVERS: INSIDE://kafka:9094
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_HOST_NAME: kafkarest
    networks:
      - datastream_network
  topicshook:
    image: jqrdan/datastream-hooks-topics:1.0.0
    networks:
      - datastream_network
  dashboardshook:
    image: jqrdan/datastream-hooks-dashboards:1.0.0
    depends_on: 
      - kibana
    networks:
      - datastream_network
  connectorhook:
    image: jqrdan/datastream-hooks-connectors:1.0.0
    depends_on: 
      - topicshook
    networks:
      - datastream_network
  kafkaconnect:
    image: jqrdan/datastream-connect:1.0.0
    ports:
      - "8083:8083"
    depends_on: 
      - topicshook
    networks:
      - datastream_network
    deploy:
      restart_policy:
        delay: 30s
        max_attempts: 10
        window: 120s
  details:
    image: jqrdan/datastream-stream-details:1.0.0
    depends_on: 
      - topicshook
    networks:
      - datastream_network
    deploy:
      restart_policy:
        delay: 30s
        max_attempts: 10
        window: 120s
  genres:
    image: jqrdan/datastream-stream-genres:1.0.0
    depends_on: 
      - topicshook
    networks:
      - datastream_network
    deploy:
      restart_policy:
        delay: 30s
        max_attempts: 10
        window: 120s
  artists:
    image: jqrdan/datastream-stream-artists:1.0.0
    depends_on: 
      - topicshook
    networks:
      - datastream_network
    deploy:
      restart_policy:
        delay: 30s
        max_attempts: 10
        window: 120s
  albums:
    image: jqrdan/datastream-stream-albums:1.0.0
    depends_on: 
      - topicshook
    networks:
      - datastream_network
    deploy:
      restart_policy:
        delay: 30s
        max_attempts: 10
        window: 120s
  metrics:
    image: jqrdan/datastream-metrics:1.0.0
    depends_on: 
      - es01
    networks:
      - datastream_network
    deploy:
      restart_policy:
        delay: 30s
        max_attempts: 10
        window: 120s
    
volumes:
  data01:
    driver: local

networks:
  datastream_network:
    driver: overlay
