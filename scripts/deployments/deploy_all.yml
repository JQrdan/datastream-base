version: '3.7'
services:
  app:
    image: jqrdan/datastream-app:1.0.0
    ports:
      - "3000:3000"
  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.5.2
    hostname: elasticsearch
    environment:
      - cluster.name=es-docker-cluster
      - "discovery.zen.ping.unicast.hosts=tasks.es01"
      - "network.host=0.0.0.0"
      - "node.max_local_storage_nodes=2"
    deploy:
      replicas: 3
      restart_policy:
        delay: 30s
        max_attempts: 10
        window: 120s
    volumes:
      - elastic01:/usr/share/elasticsearch/data
    ports:
      - 9200:9200
  kibana:
    image: docker.elastic.co/kibana/kibana:7.5.2
    ports:
      - "5601:5601"
    environment:
      SERVER_NAME: kibana
      ELASTICSEARCH_HOSTS: '["http://es01:9200","http://es02:9200","http://es03:9200"]'
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SYNC_LIMIT: 2
  kafka1:
    image: jqrdan/datastream-kafka:1.0.0
    ports:
      - "9092:9092"
      - "8777:8778"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:9092
      KAFKA_LISTENERS: PLAINTEXT://:9092
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_JOLOKIA_PORT: 8778
    depends_on:
      - zookeeper
    volumes:
      - kafka01:/var/lib/kafka/data
    deploy:
      restart_policy:
        delay: 30s
        max_attempts: 10
        window: 120s
  kafka2:
    image: jqrdan/datastream-kafka:1.0.0
    ports:
      - "9093:9093"
      - "8778:8778"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka2:9093
      KAFKA_LISTENERS: PLAINTEXT://:9093
      KAFKA_BROKER_ID: 2
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_JOLOKIA_PORT: 8778
    depends_on:
      - zookeeper
    volumes:
      - kafka02:/var/lib/kafka/data
    deploy:
      restart_policy:
        delay: 30s
        max_attempts: 10
        window: 120s
  kafka3:
    image: jqrdan/datastream-kafka:1.0.0
    ports:
      - "9094:9094"
      - "8779:8778"
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka3:9094
      KAFKA_LISTENERS: PLAINTEXT://:9094
      KAFKA_BROKER_ID: 3
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 3
      KAFKA_JOLOKIA_PORT: 8778
    depends_on:
      - zookeeper
    volumes:
      - kafka03:/var/lib/kafka/data
    deploy:
      restart_policy:
        delay: 30s
        max_attempts: 10
        window: 120s
  kafkarest:
    image:  confluentinc/cp-kafka-rest:5.4.0
    ports: 
      - "8082:8082"
    environment:
      KAFKA_REST_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_REST_LISTENERS: http://kafkarest:8082
      KAFKA_REST_HOST_NAME: kafkarest
  topicshook:
    image: jqrdan/datastream-hooks-topics:1.0.0
    depends_on: 
      - kafka1
      - kafka2
      - kafka3
  connectorhook:
    image: jqrdan/datastream-hooks-connectors:1.0.0
    depends_on: 
      - topicshook
  kafkaconnect:
    image: jqrdan/datastream-connect:1.0.0
    ports:
      - "8083:8083"
    depends_on: 
      - topicshook
  details:
    image: jqrdan/datastream-stream-details:1.0.0
    depends_on: 
      - topicshook
  genres:
    image: jqrdan/datastream-stream-genres:1.0.0
    depends_on: 
      - topicshook
  songs:
    image: jqrdan/datastream-stream-songs:1.0.0
    depends_on: 
      - topicshook
  artists:
    image: jqrdan/datastream-stream-artists:1.0.0
    depends_on: 
      - topicshook
  albums:
    image: jqrdan/datastream-stream-albums:1.0.0
    depends_on: 
      - topicshook
  metrics:
    image: jqrdan/datastream-metrics:1.0.0
    depends_on: 
      - kafka1
      - kafka2
      - kafka3
      - es01
      - es02
      - es03
    
volumes:
  elastic01:
    driver: local
  kafka01:
    driver: local
  kafka02:
    driver: local
  kafka03:
    driver: local